- @page_title = "Dashboard"
- @page_image = "/assets/sidebar/icon_dashboard.png"

.left 
  - if Gluttonberg::Comment.table_exists?
    .article_form
      - unless @blogs.blank?
          
        %h3 Post to Blog
        = form_for(@article_localization, :url => admin_blog_articles_path(@blogs.first.id) , :html => {:class => "validation"}) do  |f|
          = gb_error_messages_for(@article_localization)
          = block() do
            
            = f.fields_for :article , @article do |article_form| 
              = article_form.hidden_field(:user_id, :value => current_user.id) if @article.user_id.blank?
              = article_form.hidden_field(:author_id, :value => current_user.id)
              %p
                %label
                  Post to
                = article_form.select(:blog_id, @blogs.collect{|a| [a.name , a.id] } ) 
            %p
              = f.label :title
              = f.text_field(:title, :id => "page_title" , :class => "required")
            
            %p
              = f.fields_for :article , @article do |article_form| 
                = article_form.label :slug
                = article_form.text_field(:slug, :id => 'page_slug')
            %p
              = f.text_area(:body  , :class => "jwysiwyg required" )
            %p
              = f.fields_for :article , @article do |article_form| 
                = article_form.label :disable_comments
                = article_form.check_box(:disable_comments, :id => 'disable_comments')  

          %p.controls    
            = f.submit("Post" , :class => "button")


        = enable_jwysiwyg_on_class("jwysiwyg")
    
  .analytics

.right
  .summary
    %div
      %h3 Your Site
      - if Gluttonberg::Comment.table_exists?
        %p
          = "#{Gluttonberg::Article.count} Posts"
      %p
        = "#{Gluttonberg::Page.count} Pages"
      %p
        = "#{@categories_count} Categories"
      %p
        = "#{@tags_counts} Tags"
    
    - if Gluttonberg::Comment.table_exists?    
      %div
        %h3 Discussion
    
        %p
          = "#{Gluttonberg::Comment.count} Comments"
        %p
          = "#{Gluttonberg::Comment.all_approved.count} Approved"
        %p
          = "#{Gluttonberg::Comment.all_pending.count} Pending"
        %p
          = "#{Gluttonberg::Comment.all_rejected.count} Spam"

  - if Gluttonberg::Comment.table_exists?      
    .recent_comments
      %h3 Recent Comments
      - @comments.each do |comment|
        .comment
          %em
            Posted by
          = comment.author_name
          %em
            on
          = comment.commentable.title
          %br
          = comment.body
          %br
          - if comment.moderation_required
            = link_to "Approve", moderation_admin_blog_article_comment_path(comment.commentable.blog, comment.commentable, comment, :moderation => "approve"),:class=>"approve_comment"
            = link_to "Disapprove", moderation_admin_blog_article_comment_path(comment.commentable.blog, comment.commentable, comment, :moderation => "disapprove"),:class=>"disapprove_comment"
            
